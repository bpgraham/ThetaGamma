{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[7]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}
{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 95.25
xvalue("t","t", 2 )
tstop = 1000
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 51.86
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(0,126)
}
{
save_window_ = new Graph(0)
save_window_.size(0,1000,-80,40)
scene_vector_[2] = save_window_
{save_window_.view(0, -80, 1000, 120, 547, 0, 602.1, 132.4)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("v(.5)", 1, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,1000,-80,40)
scene_vector_[3] = save_window_
{save_window_.view(0, -80, 1000, 120, 546, 212, 599.4, 144.1)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("Icell.object(1).soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,1000,-80,40)
scene_vector_[4] = save_window_
{save_window_.view(0, -80, 1000, 120, 548, 624, 598.5, 134.2)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("Ocell.object(1).soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
}
{
xpanel("GUI", 0)
xlabel("Graphics")
xbutton("Raster plot","showraster()")
STH = 500
xvalue("Start binning (ms)","STH", 0,"", 0, 0 )
ENDT = 1000
xvalue("End binning (ms)","ENDT", 0,"", 0, 0 )
HW = 5
xvalue("Bin width (ms)","HW", 0,"", 0, 0 )
xstatebutton("Theta histogram?",&fTH,"")
theta = 150
xvalue("Theta period (ms)","theta", 0,"", 0, 0 )
xbutton("Spike histograms","showhist()")
xlabel("Data output")
expdate = 200215
xvalue("Date (ddmmyy)","expdate", 0,"", 0, 0 )
exprun = 1
xvalue("Experiment run","exprun", 0,"", 0, 0 )
xbutton("Store voltage traces","storeVall()")
xbutton("Store spike times","storespikesall()")
xpanel(294,116)
}
{
save_window_ = new Graph(0)
save_window_.size(0,1000,-80,40)
scene_vector_[5] = save_window_
{save_window_.view(0, -80, 1000, 120, 547, 423, 598.5, 140.5)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("Bcell.object(1).soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,1000,-80,40)
scene_vector_[6] = save_window_
{save_window_.view(0, -80, 1000, 120, 1099, 172, 300.6, 200.8)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("Ecell.object(0).Adend[1].v(0.5)", 1, 1, 0.8, 0.9, 2)
}
objectvar scene_vector_[1]
{doNotify()}
